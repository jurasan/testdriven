docker-compose -f docker-compose-dev.yml build
docker-compose -f docker-compose-dev.yml up -d
docker exec -it testdriven-app_users_1 sh

docker-compose -f docker-compose-dev.yml build --no-cache
docker-compose -f docker-compose-dev.yml up -d --build

pip install -r requirements.txt

Recreate db:
$ docker-compose -f docker-compose-dev.yml run users python manage.py recreate_db
Connect to db:
$ docker-compose -f docker-compose-dev.yml exec users-db psql -U postgres

Shell:
$ docker-compose -f docker-compose-dev.yml run users flask shell

Test:
$ docker-compose -f docker-compose-dev.yml run users python manage.py test

To show configuration:
Add a print statement to __init__.py, right before the route handler, to view the app config to ensure that it is working:
import sys
print(app.config, file=sys.stderr)
$ docker-compose -f docker-compose-dev.yml logs



Problems with mounting volume on Windows:
 1) Local Security Policy > Network List Manager Policies and Double-clicked ‘unidentified Networks’ and change the location type to ‘private’
    https://forums.docker.com/t/volume-mounts-in-windows-does-not-work/10693/92

OR 

 2) Docker Setting -> Shared Drive -> Reset credentials.